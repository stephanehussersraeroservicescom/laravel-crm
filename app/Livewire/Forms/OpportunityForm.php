<?php

namespace App\Livewire\Forms;

use App\Models\Opportunity;
use App\Models\Project;
use App\Models\AircraftSeatConfig;
use App\Livewire\Traits\HasValueCalculations;
use Livewire\Form;
use Livewire\Attributes\Validate;

class OpportunityForm extends Form
{
    use HasValueCalculations;
    #[Validate('required|exists:projects,id')]
    public $project_id = '';

    #[Validate('required|in:vertical,horizontal')]
    public $type = 'vertical';

    #[Validate('required|in:economy,business,first')]
    public $cabin_class = 'economy';

    #[Validate('required|in:active,inactive,cancelled,completed')]
    public $status = 'active';

    #[Validate('required|integer|min:0|max:100')]
    public $probability = 50;

    #[Validate('required|string|max:255')]
    public $name = '';

    #[Validate('nullable|string')]
    public $description = '';

    #[Validate('nullable|string')]
    public $comments = '';

    #[Validate('required|exists:certification_statuses,id')]
    public $certification_status_id = 11;

    #[Validate('nullable|exists:users,id')]
    public $assigned_to = '';

    #[Validate('required|exists:users,id')]
    public $created_by = '';

    #[Validate('nullable|numeric|min:0')]
    public $price_per_linear_yard = '';

    #[Validate('nullable|numeric|min:0')]
    public $linear_yards_per_seat = '';

    #[Validate('nullable|integer|min:0')]
    public $seats_in_opportunity = '';

    #[Validate('nullable|exists:aircraft_seat_configs,id')]
    public $aircraft_seat_config_id = '';

    // Computed properties
    public $potential_value = 0;
    public $nameManuallyEdited = false;
    public $autoGeneratedName = '';

    public function setOpportunity(Opportunity $opportunity)
    {
        $this->project_id = $opportunity->project_id;
        $this->type = $opportunity->type;
        $this->cabin_class = $opportunity->cabin_class;
        $this->status = $opportunity->status;
        $this->probability = $opportunity->probability;
        $this->name = $opportunity->name;
        $this->description = $opportunity->description;
        $this->comments = $opportunity->comments;
        $this->certification_status_id = $opportunity->certification_status_id;
        $this->assigned_to = $opportunity->assigned_to;
        $this->created_by = $opportunity->created_by;
        $this->price_per_linear_yard = $opportunity->price_per_linear_yard;
        $this->linear_yards_per_seat = $opportunity->linear_yards_per_seat;
        $this->seats_in_opportunity = $opportunity->seats_in_opportunity;
        $this->aircraft_seat_config_id = $opportunity->aircraft_seat_config_id;
        $this->potential_value = $opportunity->potential_value ?? 0;
    }

    public function store()
    {
        $this->validate();
        
        $opportunity = Opportunity::create($this->getFormData());
        
        return $opportunity;
    }

    public function update(Opportunity $opportunity)
    {
        $this->validate();
        
        $opportunity->update($this->getFormData());
        
        return $opportunity;
    }


    public function generateOpportunityName(): string
    {
        if (!$this->project_id || !$this->type || !$this->cabin_class) {
            return '';
        }

        $project = Project::find($this->project_id);
        if (!$project) {
            return '';
        }

        $airline = $project->airline;
        if (!$airline) {
            return '';
        }

        $parts = [
            $airline->name,
            $project->aircraft_type,
            ucfirst($this->cabin_class),
            ucfirst($this->type)
        ];

        return implode(' - ', array_filter($parts));
    }


    public function updateAutoGeneratedName()
    {
        if (!$this->nameManuallyEdited) {
            $this->autoGeneratedName = $this->generateOpportunityName();
            $this->name = $this->autoGeneratedName;
        }
    }

    private function getFormData(): array
    {
        return [
            'project_id' => $this->project_id,
            'type' => $this->type,
            'cabin_class' => $this->cabin_class,
            'status' => $this->status,
            'probability' => $this->probability,
            'potential_value' => $this->potential_value,
            'name' => $this->name,
            'description' => $this->description,
            'comments' => $this->comments,
            'certification_status_id' => $this->certification_status_id,
            'assigned_to' => $this->assigned_to,
            'created_by' => $this->created_by,
            'price_per_linear_yard' => $this->price_per_linear_yard ?: null,
            'linear_yards_per_seat' => $this->linear_yards_per_seat ?: null,
            'seats_in_opportunity' => $this->seats_in_opportunity ?: null,
            'aircraft_seat_config_id' => $this->aircraft_seat_config_id ?: null,
        ];
    }
}